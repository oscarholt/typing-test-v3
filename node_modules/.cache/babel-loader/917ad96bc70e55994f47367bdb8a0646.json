{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Desktop\\\\Workspace\\\\typing-test-v3\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getCloud = () => \"oscar testing react nextjs macbook windows\".split(\" \").sort(() => Math.random() > 0.5 ? 1 : -1);\n\nfunction App() {\n  _s();\n\n  const [userInput, setUserInput] = useState(\"\");\n  const cloud = useRef(getCloud());\n  const [activeWordIndex, setActiveWordIndex] = useState(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Typing Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: cloud.current.map((word, index) => {\n        if (index === activeWordIndex) {\n          return /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [word, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 18\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [word, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SqlEixcrzqR41YLh+kWRQHBZYUk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/oscar/Desktop/Workspace/typing-test-v3/src/App.js"],"names":["React","useState","useRef","getCloud","split","sort","Math","random","App","userInput","setUserInput","cloud","activeWordIndex","setActiveWordIndex","current","map","word","index","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;;AAEA,MAAMC,QAAQ,GAAG,MACf,6CACGC,KADH,CACS,GADT,EAEGC,IAFH,CAEQ,MAAOC,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,CAAtB,GAA0B,CAAC,CAF1C,CADF;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMU,KAAK,GAAGT,MAAM,CAACC,QAAQ,EAAT,CAApB;AAEA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,CAAD,CAAtD;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIU,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,YAAGA,KAAK,KAAKL,eAAb,EAA6B;AAC3B,8BAAO;AAAA,uBAAII,IAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AACD,4BAAO;AAAA,qBAAOA,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OALG;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEP,SAFT;AAGE,MAAA,QAAQ,EAAGS,CAAD,IAAOR,YAAY,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAH/B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAtBQZ,G;;KAAAA,G;AAwBT,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef } from \"react\"\r\n\r\nconst getCloud = () =>\r\n  \"oscar testing react nextjs macbook windows\"\r\n    .split(\" \")\r\n    .sort(() => (Math.random() > 0.5 ? 1 : -1))\r\n\r\nfunction App() {\r\n  const [userInput, setUserInput] = useState(\"\")\r\n  const cloud = useRef(getCloud())\r\n\r\n  const [activeWordIndex, setActiveWordIndex] = useState(1)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Typing Test</h1>\r\n      <p>{cloud.current.map((word, index) => {\r\n        if(index === activeWordIndex){\r\n          return <b>{word} </b>\r\n        }\r\n        return <span>{word} </span>\r\n      })}</p>\r\n      <input\r\n        type='text'\r\n        value={userInput}\r\n        onChange={(e) => setUserInput(e.target.value)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}